hash-threshold 100

statement ok
INSERT INTO t1(xt$id) VALUES(1)

# testing projection/construction

query T rowsort
SELECT OBJECT(id: 1) FROM t1
----
{"id" 1}

query T rowsort
SELECT OBJECT (foo: 2, bar: OBJECT(baz: 'biff')) FROM t1
----
{"bar" {"baz" "biff"}, "foo" 2}

query T rowsort
SELECT OBJECT (foo: OBJECT(bibble: true),
			   bar: OBJECT(baz: -4113466,
                           flib: OBJECT(flob: false)))
FROM t1
----
{"bar" {"baz" -4113466, "flib" {"flob" false}}, "foo" {"bibble" true}}

query T rowsort
SELECT ARRAY ['foo', 'bar'] FROM t1
----
["foo" "bar"]

query T rowsort
SELECT ARRAY [1, 5, -23] FROM t1
----
[1 5 -23]

query T rowsort
SELECT ARRAY [true, FALSE, true, TRUE, false] FROM t1
----
[true false true true false]

query T rowsort
SELECT OBJECT (foo: 5, bar: OBJECT(baz: ARRAY [-45, 1, 24])) FROM t1
----
{"bar" {"baz" [-45 1 24]}, "foo" 5}

query T rowsort
SELECT ARRAY [OBJECT(foo: 5), OBJECT(foo: 5)] FROM t1
----
[{"foo" 5} {"foo" 5}]

statement ok
INSERT INTO t1(xt$id) VALUES(2)

# testing more than one row

query T rowsort
SELECT OBJECT (foo: OBJECT(bibble: true),
			   bar: OBJECT(baz: -4113466,
                           flib: OBJECT(flob: false)))
FROM t1
----
{"bar" {"baz" -4113466, "flib" {"flob" false}}, "foo" {"bibble" true}}
{"bar" {"baz" -4113466, "flib" {"flob" false}}, "foo" {"bibble" true}}

# testing field refs

query T nosort
SELECT (foo.a).b
FROM (VALUES ({b: 42}),
			 ({d: 100})) AS foo(a)
----
42
NULL

query T nosort
SELECT (foo.a).b.c
FROM (VALUES ({b: {c: 'cat'}}),
 			 ({d: 100})) AS foo(a)
----
cat
NULL

# testing OBJECT round trip

statement ok
INSERT INTO t2(xt$id, data)
VALUES(1, OBJECT (foo: OBJECT(bibble: true),
				  bar: OBJECT(baz: -4113466,
				              flib: OBJECT(flob: false))))

statement ok
INSERT INTO t2(xt$id, data)
VALUES(2, {foo: {bibble: true},
		   bar: {baz: 1001}})

query T rowsort
SELECT t2.data FROM t2
----
{"bar" {"baz" -4113466, "flib" {"flob" false}}, "foo" {"bibble" true}}
{"bar" {"baz" 1001}, "foo" {"bibble" true}}

# SEE 440
#query T rowsort
#SELECT t2.data.foo FROM t2
#----
#{"bibble" true}
#{"bibble" true}

#query T nosort
#SELECT t2.data.foo.bibble FROM t2
#----
#true
#true

# SEE #244
#SELECT t2.data, t1.data FROM t2, t2 AS t1

# testing ARRAY round trip

statement ok
INSERT INTO t3(xt$id, data) VALUES (1, [2, 3])

statement ok
INSERT INTO t3(xt$id, data) VALUES (2, [6, 7])

query T nosort
SELECT t3.data FROM t3
----
[6 7]
[2 3]

query T nosort
SELECT t3.data[2] FROM t3
----
7
3

skipif xtdb # see #546
query TT nosort
SELECT t3.data, t2.data FROM t3, t3 AS t2
----
[2 3]
[2 3]
[2 3]
[6 7]
[6 7]
[2 3]
[6 7]
[6 7]
